prg1_c.c

#include <fcntl.h>
#include <stdio.h>
#include <stdlib.h>
#include <sys/stat.h>
#include <unistd.h>
#include <string.h>

#define bufSize 64

int main()
{
    int fd, fi, fd2, nwrite, nread;
    char inputMsg[bufSize + 1];
    char readChar[bufSize + 1];

    fi = mkfifo("prg1_client", 0777);
    if (fi < 0)
    {
        perror("Error creating fifo");
        exit(0);
    }

    fd = open("prg1_client", O_WRONLY);

    printf("Enter a String:");
    scanf("%s", inputMsg);

    nwrite = write(fd, inputMsg, sizeof(inputMsg));

    if (nwrite < 0)
        printf("message write failed");

    close(fd);

    sleep(2);
    fd2 = open("prg1_server", O_RDWR);
    nread = read(fd2, &readChar, sizeof(readChar));
    printf("OUTPUT: %s\n", readChar);

    unlink("prg1_client");

    return 0;
}

prg1_s.c
#include <fcntl.h>
#include <stdio.h>
#include <stdlib.h>
#include <sys/stat.h>
#include <unistd.h>
#include <string.h>

#define bufSize 64

int main()
{
    int fd, fi, fd2, nread, i, nwrite, flag = 0, length;
    char readChar[bufSize + 1];
    char outputStr[bufSize + 1];

    memset(readChar, '\0', sizeof(readChar));
    fd = open("prg1_client", O_RDWR);
    if (fd < 0)
    {
        perror("Error opening fifo");
        exit(0);
    }

    nread = read(fd, &readChar, sizeof(readChar));
    if (nread > 0)
    {
        printf("\nReceived Data: %s", readChar);
        length = strlen(readChar);
        for (i = 0; i < length; i++)
        {
            if (readChar[i] != readChar[length - i - 1])
            {
                flag = 1;
                break;
            }
        }

        if (flag)
        {
            strcpy(outputStr, "NOT PALINDROME");
        }
        else
        {
            strcpy(outputStr, "PALINDROME");
        }
        close(fd);

        fi = mkfifo("prg1_server", 0777);
        if (fi < 0)
        {
            perror("Error creating fifo");
            exit(0);
        }

        fd2 = open("prg1_server", O_WRONLY);
        nwrite = write(fd2, outputStr, sizeof(outputStr));
        close(fd2);
    }
    else
    {
        perror("Error reading ");
    }
    unlink("prg1_server");
    return 0;
}





prg2_c.c
#include <fcntl.h>
#include <stdio.h>
#include <stdlib.h>
#include <sys/stat.h>
#include <unistd.h>
#include <string.h>

#define bufSize 64

int main()
{
    int fd, fi, fd2, nwrite, nread;
    char username[bufSize + 1];
    char password[bufSize + 1];
    char readChar[bufSize + 1];

    fi = mkfifo("prg2_client", 0777);
    if (fi < 0)
    {
        perror("Error creating fifo");
        exit(0);
    }

    fd = open("prg2_client", O_WRONLY);

    printf("Enter a username:");
    scanf("%s", username);

    printf("Enter a password:");
    scanf("%s", password);

    nwrite = write(fd, username, sizeof(username));
    nwrite = write(fd, password, sizeof(password));

    if (nwrite < 0)
        printf("message write failed");

    close(fd);

    sleep(2);
    fd2 = open("prg2_server", O_RDWR);
    nread = read(fd2, &readChar, sizeof(readChar));
    printf("OUTPUT: %s\n", readChar);

    unlink("prg2_client");

    return 0;
}



prg2_s.c

#include <fcntl.h>
#include <stdio.h>
#include <stdlib.h>
#include <sys/stat.h>
#include <unistd.h>
#include <string.h>

#define bufSize 64

int main()
{
    int fd, fi, fd2, nread, i, nwrite, flag = 0, length;
    char username[bufSize + 1];
    char password[bufSize + 1];
    char outputStr[bufSize + 1];
    char usernameValid[] = "alwin";
    char passwordValid[] = "password";

    memset(username, '\0', sizeof(username));
    memset(password, '\0', sizeof(password));
    fd = open("prg2_client", O_RDWR);
    if (fd < 0)
    {
        perror("Error opening fifo");
        exit(0);
    }

    nread = read(fd, &username, sizeof(username));
    nread = read(fd, &password, sizeof(password));
    if (nread > 0) { 

        if (strcmp(username,usernameValid) == 0 && strcmp(password,passwordValid) == 0) {
            strcpy(outputStr, "Welcome alwin");
        } else {
            strcpy(outputStr, "Login Access denied.");
        }
        close(fd);

        fi = mkfifo("prg2_server", 0777);
        if (fi < 0)
        {
            perror("Error creating fifo");
            exit(0);
        }

        fd2 = open("prg2_server", O_WRONLY);
        nwrite = write(fd2, outputStr, sizeof(outputStr));
        close(fd2);
    }
    else
    {
        perror("Error reading ");
    }
    unlink("prg2_server");
    return 0;
}




prg3_c.c
#include <fcntl.h>
#include <stdio.h>
#include <stdlib.h>
#include <sys/stat.h>
#include <unistd.h>
#include <string.h>

#define bufSize 64

int main() {
    int fd, fi, fd2, nwrite, nread;
    int deposit,year, interest;

    fi = mkfifo("prg3_client", 0777);
    if (fi < 0) {
        perror("Error creating fifo");
        exit(0);
    }

    fd = open("prg3_client", O_WRONLY);

    printf("Enter a Deposit:");
    scanf("%d", &deposit);

    printf("Enter a Year:");
    scanf("%d", &year);

    nwrite = write(fd, &deposit, sizeof(deposit));
    nwrite = write(fd, &year, sizeof(year));

    if (nwrite < 0)
        printf("message write failed");

    close(fd);

    sleep(2);
    fd2 = open("prg3_server", O_RDWR);
    nread = read(fd2, &interest, sizeof(interest));
    printf("INTREST: %d\n", interest);
    printf("TOTAL AMOUNT: %d\n", interest + deposit);

    unlink("prg3_client");

    return 0;
}



prg3_s.c
#include <fcntl.h>
#include <stdio.h>
#include <stdlib.h>
#include <sys/stat.h>
#include <unistd.h>
#include <string.h>

#define bufSize 64

int main()
{
    int fd, fi, fd2, nread, i, nwrite, flag = 0, length;
    int deposit,year=0;
    int interest;

    // memset(deposit, '\0', sizeof(deposit));
    // memset(year, '\0', sizeof(year));

    fd = open("prg3_client", O_RDWR);
    if (fd < 0)
    {
        perror("Error opening fifo");
        exit(0);
    }

    nread = read(fd, &deposit, sizeof(deposit));
    nread = read(fd, &year, sizeof(year));

    if (nread > 0) {

        printf("%d", deposit);
        if(year == 1) {
            interest = deposit * 0.50;
        } else if(year  == 2) {
            interest = (deposit * 0.06) * 2;
        } else if(year == 3) {
            interest = (deposit * 0.07) * 3;
        } else if(year > 3) {
            interest = (deposit * 0.08) * year;
        }
        close(fd);

        fi = mkfifo("prg3_server", 0777);
        if (fi < 0) {
            perror("Error creating fifo");
            exit(0);
        }

        fd2 = open("prg3_server", O_WRONLY);
        nwrite = write(fd2, &interest, sizeof(interest));
        close(fd2);
    }
    else
    {
        perror("Error reading ");
    }
    unlink("prg3_server");
    return 0;
}





prg4_c.c 
#include <fcntl.h>
#include <stdio.h>
#include <stdlib.h>
#include <sys/stat.h>
#include <unistd.h>
#include <string.h>

#define bufSize 64

int main() {
    int fd, fi, fd2, nwrite, nread;
    int customerId,unitConsumed, output;

    fi = mkfifo("prg4_client", 0777);
    if (fi < 0) {
        perror("Error creating fifo");
        exit(0);
    }

    fd = open("prg4_client", O_WRONLY);

    printf("Enter a Customer Id:");
    scanf("%d", &customerId);

    printf("Enter a Unit Consumed:");
    scanf("%d", &unitConsumed);
 
    nwrite = write(fd, &unitConsumed, sizeof(unitConsumed));

    if (nwrite < 0)
        printf("message write failed");

    close(fd);

    sleep(2);
    fd2 = open("prg4_server", O_RDWR);
    nread = read(fd2, &output, sizeof(output));

    printf("Customer Id: %d\n", customerId);
    printf("Unit Consumed: %d\n", unitConsumed);
    printf("Total Amount: %d\n", output);

    unlink("prg4_client");

    return 0;
}


prg4_s.c 
#include <fcntl.h>
#include <stdio.h>
#include <stdlib.h>
#include <sys/stat.h>
#include <unistd.h>
#include <string.h>

#define bufSize 64

int main()
{
    int fd, fi, fd2, nread, i, nwrite, flag = 0, length;
    int totalAmount, unitConsumed;
 

    fd = open("prg4_client", O_RDWR);
    if (fd < 0)
    {
        perror("Error opening fifo");
        exit(0);
    }

    nread = read(fd, &unitConsumed, sizeof(unitConsumed));


    if (nread > 0) {
        if(unitConsumed <= 50) {
            totalAmount = unitConsumed * 1;
        } else if(unitConsumed <= 100) {
            totalAmount = 50;
            totalAmount += (unitConsumed - 50) * 1.5;
        } else if(unitConsumed <= 200) {
            totalAmount = 125;
            totalAmount += (unitConsumed - 100) *2;
        } else {
            totalAmount = 225;
            totalAmount += (unitConsumed - 200) * 3;
        }
        close(fd);

        fi = mkfifo("prg4_server", 0777);
        if (fi < 0) {
            perror("Error creating fifo");
            exit(0);
        }

        fd2 = open("prg4_server", O_WRONLY);
        nwrite = write(fd2, &totalAmount, sizeof(totalAmount));
        close(fd2);
    }
    else
    {
        perror("Error reading ");
    }
    unlink("prg4_server");
    return 0;
}




prg5_c.c 
#include <fcntl.h>
#include <stdio.h>
#include <stdlib.h>
#include <sys/stat.h>
#include <unistd.h>
#include <string.h>

#define bufSize 64

int main() {
    int fd, fi, fd2, nwrite, nread;
    int noOfSeats,totalAmount;
    char source[bufSize], destination[bufSize],name[bufSize],output[bufSize];

    fi = mkfifo("prg5_client", 0777);
    if (fi < 0) {
        perror("Error creating fifo");
        exit(0);
    }

    fd = open("prg5_client", O_WRONLY);

    printf("Enter Name:");
    scanf("%s", name);

    printf("Enter source:");
    scanf("%s", source);

    printf("Enter Destination:");
    scanf("%s", destination);

    printf("Enter No Of Seats:");
    scanf("%d", &noOfSeats);

    nwrite = write(fd, &source, sizeof(source));
    nwrite = write(fd, &destination, sizeof(destination));
    nwrite = write(fd, &noOfSeats, sizeof(noOfSeats));

    if (nwrite < 0)
        printf("message write failed");

    close(fd);

    sleep(2);
    fd2 = open("prg5_server", O_RDWR);
    nread = read(fd2, &output, sizeof(output));
    nread = read(fd2, &totalAmount, sizeof(totalAmount));

    if (totalAmount > 0) {
        printf("Name: %s\n", name);
        printf("%s => %s\n", source, destination);
        printf("No Of Seats: %d\n", noOfSeats);
        printf("Total Amount:%d\n", totalAmount);
    } else {
        printf("%s\n", output);
    }

    unlink("prg5_client");

    return 0;
}



prg5_s.c 
#include <fcntl.h>
#include <stdio.h>
#include <stdlib.h>
#include <sys/stat.h>
#include <unistd.h>
#include <string.h>

#define bufSize 64


struct infoData {
    char source[bufSize];
    char destination[bufSize];
    int availableSeats;
    int amount;
};

int main() {
    struct infoData data[2];

    strcpy(data[0].source,"Udupi");
    strcpy(data[0].destination, "Mangalore");
    data[0].availableSeats = 10;
    data[0].amount = 100;

    strcpy(data[1].source, "Udupi");
    strcpy(data[1].destination, "Bangalore");
    data[1].availableSeats = 20;
    data[1].amount = 750;

    int fd, fi, fd2, nread, i, nwrite, flag = 0, length;
    int totalAmount = 0,seats;
    char outputStr[bufSize] = "Source Destination incorrect";
    char source[bufSize];
    char destination[bufSize];
 

    fd = open("prg5_client", O_RDWR);
    if (fd < 0)
    {
        perror("Error opening fifo");
        exit(0);
    }

    nread = read(fd, &source, sizeof(source));
    nread = read(fd, &destination, sizeof(destination));
    nread = read(fd, &seats, sizeof(seats));

    if (nread > 0) {
        for(i=0;i<2;i++) {
            if (strcmp(source, data[i].source) == 0 && strcmp(destination, data[i].destination) == 0) {
                printf("YE YES");
                if(data[i].availableSeats >= seats) {
                    totalAmount = seats * data[i].amount;
                    data[i].availableSeats -= seats;
                    strcpy(outputStr, "Seats available");
                } else {
                    strcpy(outputStr, "Seats Not Available");
                }
            }
        }
        close(fd);

        fi = mkfifo("prg5_server", 0777);
        if (fi < 0) {
            perror("Error creating fifo");
            exit(0);
        }

        fd2 = open("prg5_server", O_WRONLY);
        nwrite = write(fd2, &outputStr, sizeof(outputStr));
        nwrite = write(fd2, &totalAmount, sizeof(totalAmount));
        close(fd2);
    }
    else
    {
        perror("Error reading ");
    }
    unlink("prg5_server");
    return 0;
}
